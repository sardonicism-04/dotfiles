#!/bin/sh

# Confirm that the GIF directory exists, and create it if not
[ -d ~/Pictures/GIF-captures ] || mkdir ~/Pictures/GIF-captures

# Get the dimensions for the capture region via slop
DIMENSIONS=$(slop -f "%x %y %w %h %g %i" -c 0.162,0.155,0.254,0.5 -lD) || exit 1
read -r X Y W H G ID < <(echo $DIMENSIONS)

# Create temp files here so as to not create them if we cancel
TMP_FILE=$(mktemp /tmp/outXXXXXXXXX.avi)

# Gee I wonder what this does
notify-send -t 1000 -a "GIF Region Capture" "GIF recording started"

# First, record the region specified by slop into a temporary avi file
ffmpeg -y -f x11grab -framerate 10 -s "$W"x"$H" -i :0.0+$X,$Y -c:v huffyuv $TMP_FILE
# This has no termination point defined here, so we wait until the command to kill ffmpeg entirely is executed
# Because I am lazy

# Send a notification here to confirm that the AVI is being converted properly
notify-send -t 1000 -a "GIF Region Capture" "Processing recording..."

# Convert the temporary AVI into a GIF, using ffmpeg's palettegen to improve conversion
ffmpeg -y -i $TMP_FILE -vf "fps=10,split[s0][s1];[s0]palettegen[p];[s1][p]paletteuse" "$HOME/Pictures/GIF-captures/$(date +"%Y-%m-%d_%H-%M-%S").gif"

# Then cleanup the mess we made with the temporary files because they're icky
rm $TMP_FILE

# Send a notification to confirm that the GIF was saved successfully
notify-send -t 1000 -a "GIF Region Capture" "GIF saved"
